<html>
  <head>
    <style>
      /*Remove arrow from number input box*/
      input::-webkit-outer-spin-button, input::-webkit-inner-spin-button {-webkit-appearance: none; margin: 0;}
      input {
        border-radius: 25px;
        padding: 2px;
        padding-left: 5px;
      }
      table {
        border: 1px solid black;
        margin-left: auto;
        margin-right: auto;
      }
      td {
        border: 1px solid black;
        text-align: center;
        font-weight: bold;
      }
      #qstBinder {
        background: repeating-linear-gradient(
          45deg,
          #FFF 0px,
          #FFF 10px,
          #000 10px,
          #000 20px
        );
      }
      #qstPair {
        background: repeating-linear-gradient(
          45deg,
          #FFF 0px,
          #FFF 10px,
          #000 10px,
          #000 20px
        );
      }
      #qstTip, #qstRng {
        width:60px;
        text-align:center;
      }
      #cntAnswer {
        padding: 10px;
        margin: 5px;
        border: 1px solid black;
      }
      #txtAnswer {
        width: 100px;
        text-align: center;
      }
      #txtScore, #txtTimer {
        width: 80px;
        text-align: center;
      }
      #btnSubmit {
        width: 55px;
      }
      .debug {
        text-align: center;
        border: 2px solid blue;
      }
      
      #tblStats {
        width: 400px;
      }
      #tblGame {
        width: 400px;
      }
      #tblOptions {
        width: 400px;
      }
      
      
      .colWhite   {background-color: #FFF;color: #000;}
      .colRed     {background-color: #F00;color: #000;}
      .colBlack   {background-color: #000;color: #FFF;}
      .colYellow  {background-color: #FF0;color: #000;}
      .colViolet  {background-color: #F0F;color: #000;}
      .colBlue    {background-color: #00F;color: #000;}
      .colOrange  {background-color: #FA1;color: #000;}
      .colGreen   {background-color: #0F0;color: #000;}
      .colBrown   {background-color: #B73;color: #000;}
      .colSlate   {background-color: #AAA;color: #000;}
      
      
    </style>
  </head>
  <body>  <!-- onload="start();"-->
    
    <table id="tblStats">
      <tr>
        <th>Score</th>
        <th>Time</th>
      </tr>
      <tr>
        <td><input readonly type="text" id="txtScore" name="txtScore" value="0"/></td>
        <td><input readonly type="text" id="txtTimer" name="txtTimer" value="0"/></td>
      </tr>
    </table>
    <br><br>
    <table id="tblGame">
      <tr><td id="qstSBinder">&nbsp;</td></tr>
      <tr><td id="qstBinder">&nbsp;</td></tr>
      <tr><td id="qstPair">&nbsp;</td></tr>
      <tr>
        <td>
          <div id="cntAnswer">
            <input id="txtAnswer" type="number" name="txtAnswer" onkeydown="if (event.keyCode==13) document.getElementById('btnSubmit').click()"/>
            <button id="btnSubmit" onclick="checkAnswer();">Check</button>
          </div>
        </td>
      </tr>
    </table>
    <br><br><br>
    <table id="tblOptions">
      <tr>
        <th colspan="2">Options</th>
      </tr>
      <tr>
        <td>Max:</td><td><input type="number" id="optMax" name="optMax" value="25"/></td>
      </tr>
      <tr>
        <td>Duration(min):</td><td><input type="number" id="optLimit" name="optLimit" value="1"/></td>
      </tr>
	  <tr>
	  </tr>
      <tr>
        <td colspan="2"><button id="btnReset" onclick="reset();">New Game</button></td>
      </tr>
    </table>
	<br><br><br><br><br><br>
	<br><br><br><br><br><br>
    <table>
		<tr>
			<td><input type="checkbox" id="btnDebug" onclick="toggleDebug(this);" checked>Debug</input></td>
		</tr>
	</table>
	
    <table id="tblDebug" class="debug">
      <tr>
        <th>Answer</th><th colspan="2"></th>
      </tr>
      <tr>
        <td><input disabled class="debug" type="text" id="hdnQuestion" name="hdnQuestion"/></td>
        <td colspan="2"></td>
      </tr>
      <tr>
        <th>Super Binder</th><th colspan="2"></th>
      </tr>
      <tr>
        <td><input disabled class="debug" type="text" id="hdnSBinder" name="hdnSBinder"/></td>
        <td colspan="2"></td>
      </tr>
      <tr>
        <th>Binder</th>
        <th>Binder Tip</th>
        <th>Binder Ring</th>
      </tr>
      <tr>
        <td><input disabled class="debug" type="text" id="hdnBinder" name="hdnBinder"/></td>
        <td><input disabled class="debug" type="text" id="hdnBinderTip" name="hdnBinderTip"/></td>
        <td><input disabled class="debug" type="text" id="hdnBinderRing" name="hdnBinderRing"/></td>
      </tr>
      <tr>
        <th>Pair</th>
        <th>Pair Tip</th>
        <th>Pair Ring</th>
      </tr>
      <tr>
        <td><input disabled class="debug" type="text" id="hdnPair" name="hdnPair"/></td>
        <td><input disabled class="debug" type="text" id="hdnTip" name="hdnTip"/></td>
        <td><input disabled class="debug" type="text" id="hdnRing" name="hdnRing"/></td>
      </tr>
      <tr>
        <th>Game Start</th>
        <th>Question Start</th>
        <th>Game On</th>
      </tr>
      <tr>
        <td><input disabled class="debug" type="text" id="hdnStart" name="hdnStart"/></td>
        <td><input disabled class="debug" type="text" id="hdnQuestionStart" name="hdnQuestionStart"/></td>
        <td><input disabled class="debug" type="text" id="hdnGameOn" name="hdnGameOn"/></td>
      </tr>
    </table>
    <br><br>
  </body>
  <script>
    const colTips = ["colWhite", "colRed", "colBlack", "colYellow", "colViolet"];
    const colRings = ["colBlue", "colOrange", "colGreen", "colBrown", "colSlate"];
    function nextQuestion() {
      const d = new Date();
      document.getElementById("hdnQuestionStart").value = d.getTime();
      
      var iMax = parseInt(document.getElementById("optMax").value);
	  
      var iQuestion
      do {
        iQuestion = Math.ceil(Math.random() * iMax);
      }
      while (iQuestion == parseInt(document.getElementById("hdnQuestion").value))
	  
	  
      var iSBinder = Math.ceil(iQuestion / 600);
      //var iSBinderTip = Math.ceil(iSBinder/5);
      //var iSBinderRing = iSBinder - (Math.ceil(iSBinder/5)*5-5);
      
      var iBinder = Math.ceil((iQuestion) / 25);
      var iBinderTip = Math.ceil(iBinder/5);
      var iBinderRing = iBinder - ((iBinderTip-1)*5);
      
      var iPair = iQuestion - ((iBinder-1) * 25);
      var iTip = Math.ceil(iPair/5);
      var iRing = iPair - ((iTip-1)*5);
      
      document.getElementById("hdnQuestion").value = iQuestion;
      document.getElementById("hdnSBinder").value = iSBinder;
      document.getElementById("hdnBinder").value = iBinder;
      document.getElementById("hdnBinderTip").value = iBinderTip;
      document.getElementById("hdnBinderRing").value = iBinderRing;
      document.getElementById("hdnPair").value = iPair;
      document.getElementById("hdnTip").value = iTip;
      document.getElementById("hdnRing").value = iRing;
      
      //document.getElementById("qstSBinder").style.background = getStripe(iSBinderTip-1,iSBinderRing-1);
      document.getElementById("qstSBinder").className = colTips[iSBinder];
      
      document.getElementById("qstBinder").style.background = getStripe(iBinderTip-1,iBinderRing-1);
      //document.getElementById("qstBinderTip").className = colTips[iBinderTip-1];
      //document.getElementById("qstBinderRing").className = colTips[iBinderRing-1];
      
      document.getElementById("qstPair").style.background = getStripe(iTip-1,iRing-1);
      //document.getElementById("qstTip").className = colTips[iTip-1];
      //document.getElementById("qstRing").className = colRings[iRing-1];
    }
    function checkAnswer() {
      if (document.getElementById("hdnGameOn").value != "1") return
      if (document.getElementById("txtAnswer").value == "") return
      if (document.getElementById("txtAnswer").value == document.getElementById("hdnQuestion").value) {
        //Quickly answered gives more points
        var endDate = new Date();
        var scoreIncrease = Math.max(Math.ceil(10-(endDate.getTime() - parseInt(document.getElementById("hdnQuestionStart").value))/1000),1);
        console.log("Score +"+scoreIncrease);
        
        document.getElementById("txtScore").value = parseInt(document.getElementById("txtScore").value) + scoreIncrease;
        document.getElementById("txtAnswer").value = ""
        showResult(true);
        nextQuestion();
      } else {
        document.getElementById("txtScore").value = parseInt(document.getElementById("txtScore").value) - 1;
        document.getElementById("txtAnswer").value = ""
        showResult(false);
      }
      document.getElementById("txtAnswer").focus();
    }
	function start() {
		document.getElementById("btnDebug").click();
		reset();
	}
    function reset() {
      if (parseInt(document.getElementById("optMax").value) < 25) {
        alert("'MAX' can not be less than 25");
        document.getElementById("optMax").value = "25";
      }
      if (parseInt(document.getElementById("optMax").value) > 3000) {
        alert("'MAX' can not be more than 3000");
        document.getElementById("optMax").value = "3000";
      }
      if (parseInt(document.getElementById("optMax").value) > 25) {
        document.getElementById("qstBinder").style.display = '';
      } else {
        document.getElementById("qstBinder").style.display = 'none';
      }
      if (parseInt(document.getElementById("optMax").value) > 600) {
        document.getElementById("qstSBinder").style.display = '';
      } else {
        document.getElementById("qstSBinder").style.display = 'none';
      }
      document.getElementById("txtScore").value = "0";
      nextQuestion();

      const d = new Date();
      document.getElementById("hdnStart").value = d.getTime();
      document.getElementById("txtTimer").value = '0';
      updateTimer();
      document.getElementById("hdnGameOn").value=1;
      document.getElementById("txtAnswer").value = "";
      document.getElementById("txtAnswer").focus();
    }
    function getStripe(tip, ring) {
      const colTip = ["#FFFFFF","#FF0000","#000000","#FFFF00","#8806CE"];
      const colRing = ["#0000FF","#FFAA11","#00FF00","#654321","#AAAAAA"];
      return 'repeating-linear-gradient(-45deg, '+colTip[tip]+' 0px, '+colTip[tip]+' 15px, '+colRing[ring]+' 15px, '+colRing[ring]+' 20px)';
    }
	function toggleDebug(elem) {
		if (elem.checked) {
			document.getElementById("tblDebug").style.display = '';
		} else {
			document.getElementById("tblDebug").style.display = 'none';
		};
	}
	function updateTimer() {
		
		
		var endDate   = new Date();
		var seconds = (parseInt(document.getElementById("optLimit").value)*60)-(endDate.getTime() - document.getElementById("hdnStart").value) / 1000;
    //var seconds = (endDate.getTime() - document.getElementById("hdnStart").value) / 1000;
		document.getElementById("txtTimer").value = new Date(seconds * 1000).toISOString().substring(14, 22);
    if (seconds > 0) {
      var frequency = 100;
      var myVar = setTimeout(updateTimer, frequency);
    } else {
      document.getElementById("hdnGameOn").value=0;
      document.getElementById("txtTimer").value = new Date(parseInt(document.getElementById("optLimit").value)*1000).toISOString().substring(14, 22)
    }
	}
  function showResult(result) {
    if (result==true) {
      document.getElementById("txtAnswer").style.background="rgb(0,255,0)";
    } else {
      document.getElementById("txtAnswer").style.background="rgb(255,0,0)";
    }
    fadeResult();
  }
  function fadeResult() {
    var rgbOld = document.getElementById("txtAnswer").style.background;
    if (rgbOld=="rgb(255, 255, 255)") return
    
    var rgbNew = rgbOld.substring(4, rgbOld.length-1).replace(/ /g, '').split(','); 
    var rgb = [];
    rgb[0] = parseInt(rgbNew[0]);rgb[1] = parseInt(rgbNew[1]);rgb[2] = parseInt(rgbNew[2]);
    if (rgb[0]<255) {rgb[0]+=10;}else{rgb[0]=255;};
    if (rgb[1]<255) {rgb[1]+=10;}else{rgb[1]=255;};
    if (rgb[2]<255) {rgb[2]+=10;}else{rgb[2]=255;};
    
    rgbNew = "rgb("+rgb[0]+","+rgb[1]+","+rgb[2]+")";
    //console.log(rgbNew + ":" + rgbOld);
  
    document.getElementById("txtAnswer").style.background = rgbNew;
    var myVar = setTimeout(fadeResult, 50);
  }
  </script>
</html>

